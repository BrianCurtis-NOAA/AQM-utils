#-----------------------------------------------------------------------------
#
# Environment setup script for bias correction programs.
#
# 2016-feb-11	Versions for Intel fortran on Theia, default version,
#		  which is currently Intel 14.0.
#		By Dave Allured, NOAA/OAR/ESRL/PSD/CIRES.
#		Parallel version activates only OpenMP parallel.
# 2016-feb-24	Restructure serial/parallel selection.
#		Eliminate $F90_PARALLEL, just use $F90_FLAGS.
#
# 2017-jun-15	Add $LIB_ANALOG.
#
# 2019-may-31	Switch to Intel version 18.0.
# 2019-aug-08	Add $LIB_PROBABILITY for probability forecast module.
#
# 2019-aug-20	Versions for Hera.  Minimal changes.
#		Intel 18.0 minor version number update.
# 2019-nov-08	Switch to NCEPLIBS module path for Hera.
#		Currently gets BUFRLIB 11.3.0.
#
# 2021-nov-19	Minor.  Add -no-wrap-margin.
#		Omit obsolete variables.
# 2021-nov-21	Fix for recent OpenMP parallel change on Hera.
#
# 2022-mar-11	Update to Intel 2022.1.2, per instructions.
#
# This C shell script sets up environment variables used by
# generic make files and executables.  This supports make files
# that are portable between compilers and platforms.
#
# This script must be source'd, not executed, to affect the
# current shell.
#
# The minimum required Intel compiler version for bias_correct
# is currently ifort 18.0.  The interpolation program can use
# earlier versions, but let's stick with a single version within
# the current project.
#
#-----------------------------------------------------------------------------

#module use -a /scratch2/NCEPDEV/nwprod/NCEPLIBS/modulefiles
module purge

module load envvar/1.0
module load PrgEnv-intel/8.1.0
module load craype/2.7.8

module load intel/19.1.3.304            # WCOSS2

module load cray-mpich/8.1.7
module load netcdf/4.7.4                # system default version
module load bufr/11.5.0                 # system default version
module list

unset OMP_NUM_THREADS		# enable default OpenMP core discovery
					# affects only runtime, parallel mode

export F90_CMD=ifort

export LIB_NETCDF="-I$NETCDF/include -L$NETCDF/lib -lnetcdff"
export LIB_BUFR="$BUFR_LIBd"

export LIB_ANALOG=../lib.analog		# analog filter code
export LIB_BIAS=../lib.bias		# project support library
export LIB_F90=../lib.f90		# general fortran library
export LIB_PROBABILITY=../lib.probability	# probability forecast module

ff1='-g -heap-arrays -assume byterecl -assume noold_maxminloc'
ff2='-traceback -warn all,noexternal -warn errors'
ff3='-fstack-security-check -fpe-all=0'
ff6='-check noarg_temp_created'	# must come after -check all
ff7='-no-wrap-margin'

# For Intel, runtime checking is entangled with optimization.
# Compile time checking may be used with either serial or parallel.

ff4='-check all -O0'			# use runtime checks with -O0
#set	ff4 = '-O3'				# no runtime checks with -O3

ff5=''				# serial
#set	ff5 = '-qopenmp'			# parallel

export F90_FLAGS="$ff1 $ff2 $ff3 $ff4 $ff5 $ff6 $ff7"
export F90_CLEANUP='*.o *.mod *__genmod.f90'	# for rm statement

unset ff1 ff2 ff3 ff4 ff5 ff6 ff7
